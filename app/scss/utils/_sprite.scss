// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-left-name: 'arrow-left';
$arrow-left-x: 72px;
$arrow-left-y: 0px;
$arrow-left-offset-x: -72px;
$arrow-left-offset-y: 0px;
$arrow-left-width: 11px;
$arrow-left-height: 21px;
$arrow-left-total-width: 83px;
$arrow-left-total-height: 67px;
$arrow-left-image: '../img/sprite.png';
$arrow-left: (72px, 0px, -72px, 0px, 11px, 21px, 83px, 67px, '../img/sprite.png', 'arrow-left', );
$arrow-right-name: 'arrow-right';
$arrow-right-x: 72px;
$arrow-right-y: 26px;
$arrow-right-offset-x: -72px;
$arrow-right-offset-y: -26px;
$arrow-right-width: 11px;
$arrow-right-height: 21px;
$arrow-right-total-width: 83px;
$arrow-right-total-height: 67px;
$arrow-right-image: '../img/sprite.png';
$arrow-right: (72px, 26px, -72px, -26px, 11px, 21px, 83px, 67px, '../img/sprite.png', 'arrow-right', );
$cart-name: 'cart';
$cart-x: 42px;
$cart-y: 0px;
$cart-offset-x: -42px;
$cart-offset-y: 0px;
$cart-width: 25px;
$cart-height: 25px;
$cart-total-width: 83px;
$cart-total-height: 67px;
$cart-image: '../img/sprite.png';
$cart: (42px, 0px, -42px, 0px, 25px, 25px, 83px, 67px, '../img/sprite.png', 'cart', );
$figure-name: 'figure';
$figure-x: 0px;
$figure-y: 0px;
$figure-offset-x: 0px;
$figure-offset-y: 0px;
$figure-width: 37px;
$figure-height: 37px;
$figure-total-width: 83px;
$figure-total-height: 67px;
$figure-image: '../img/sprite.png';
$figure: (0px, 0px, 0px, 0px, 37px, 37px, 83px, 67px, '../img/sprite.png', 'figure', );
$login-name: 'login';
$login-x: 0px;
$login-y: 42px;
$login-offset-x: 0px;
$login-offset-y: -42px;
$login-width: 22px;
$login-height: 25px;
$login-total-width: 83px;
$login-total-height: 67px;
$login-image: '../img/sprite.png';
$login: (0px, 42px, 0px, -42px, 22px, 25px, 83px, 67px, '../img/sprite.png', 'login', );
$search-name: 'search';
$search-x: 27px;
$search-y: 42px;
$search-offset-x: -27px;
$search-offset-y: -42px;
$search-width: 19px;
$search-height: 19px;
$search-total-width: 83px;
$search-total-height: 67px;
$search-image: '../img/sprite.png';
$search: (27px, 42px, -27px, -42px, 19px, 19px, 83px, 67px, '../img/sprite.png', 'search', );
$spritesheet-width: 83px;
$spritesheet-height: 67px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($arrow-left, $arrow-right, $cart, $figure, $login, $search, );
$spritesheet: (83px, 67px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
